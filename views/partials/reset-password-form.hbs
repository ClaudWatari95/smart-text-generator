<p class="font-bold">Reset Password</p>
<form class="w-full mx-auto my-7" id="reset-password-form">
  {{> auth-input name="email" id="email" type="email"}}
  {{> auth-input name="password" id="password" type="password"}}
  {{> auth-input name="confirm-password" id="password-repeat" type="password"}}
  <div class="flex justify-between">        
    <button class="submit px-5 py-2 my-2 rounded-lg">Update Password</button>
    <a href="/signup" class="dark-gray py-2 underline">Sign Up</a>
  </div>
  <a href="/login" class="dark-gray py-2 text-xs">Back to login</a>
  <div class="my-4"></div>
</form>
<script>
  const url = `${window.location.protocol}//${window.location.host}`;
  const form = document.querySelector('#reset-password-form');
  const resetPasswordFunction = (e) => {
    e.preventDefault();
    const emailInput = document.querySelector('#email');
    const passwordInput = document.querySelector('#password');
    const passwordRepeatInput = document.querySelector('#password-repeat');

    fetch(`${url}/reset-password`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({
        email: emailInput.value,
        password: passwordInput.value,
        confirmPassword: passwordRepeatInput.value
      })
    }).then((res) => res.json()).then((data) => {
      const removeElement = (element) => {
        form.removeChild(element);
      }
      const errorMessageTagExists = document.querySelector('#err-msg');
      if(errorMessageTagExists) {
        removeElement(errorMessageTagExists);
      } // remove error message if exists to prevent multiple appendChild calls
      if(data.error) {        
        const errorMessageTag = document.createElement('p');
        errorMessageTag.setAttribute('class', 'text-red-600');
        errorMessageTag.setAttribute('id', 'err-msg');
        errorMessageTag.textContent = data.error.message;
        form.appendChild(errorMessageTag);
      } else if(data.success) {
        const successMessageTag = document.createElement('p');
        successMessageTag.setAttribute('class', 'text-green-600');
        successMessageTag.textContent = data.success.message;
        form.appendChild(successMessageTag);
        window.location.replace('/login');
      } else {
        return 'Invalid data object';
      }
      });
  };
   form.addEventListener('submit', resetPasswordFunction);
</script>